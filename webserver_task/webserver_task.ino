#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

const char* username="Nodemcu";//access point generated by nodemcu
const char* password="password";

IPAddress local_ip(192,168,1,1);
IPAddress gateway(192,168,1,1);
IPAddress subnet(255,255,255,0);

//an object of esp826webserver is created with the port no
ESP8266WebServer server(80);

//declaring variables for led pins
int ledpin1= 13;
bool LED1status = LOW;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
    pinMode(ledpin1, OUTPUT);
    
   
    WiFi.softAP(username, password);//creating soft access point
  WiFi.softAPConfig(local_ip, gateway, subnet);//doubt
  delay(5000);

  server.on("/", siteconnected);
  server.on("/ledon", led1on);
  server.on("/ledoff", led1off);
  server.onNotFound(NotFound);

  server.begin();
  Serial.println("Connect to 192.168.1.1");
  Serial.println("HTTP server started");
}

void loop() {
  // put your main code here, to run repeatedly:
  server.handleClient();
  if(LED1status)
  {digitalWrite(ledpin1, HIGH);}
  else
  {digitalWrite(ledpin1, LOW);}

  }

  void siteconnected() 
{
  LED1status = LOW;
  
  Serial.println("GPIO13 Status: OFF");
  server.send(200, "text/html", HTML(LED1status)); 
}

void led1on() {
  LED1status = HIGH;
  Serial.println("GPIO13 Status: ON");
  server.send(200, "text/html", HTML(true)); 
}

void led1off() {
  LED1status = LOW;
  Serial.println("GPIO13 Status: OFF");
  server.send(200, "text/html", HTML(false)); 
}

void NotFound(){
  server.send(404, "text/plain", "Not found");
}

String HTML(bool ledstat){//the html for website stored in the form of string 
  String ptr = "<!DOCTYPE html> <html>\n";
  ptr +="<head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\">\n";
  ptr +="<title>Controlling Led through webserver</title>\n";
  ptr +="<style>html { font-family: sans-serif; display: inline-block; margin: 0px auto; text-align: center;}\n";
  ptr +="body{margin-top: 50px;} h1 {color: #444444;margin: 50px auto 30px;} \n";
  ptr +=".button {display: block;width: 80px;background-color: #1abc9c;border: none;color: white;padding: 13px 30px;text-decoration: none;font-size: 25px;margin: 0px auto 35px;cursor: pointer;border-radius: 4px;}\n";
  ptr +=".button-on {background-color: #1abc9c;}\n";
  ptr +=".button-on:active {background-color: #1abc9c;}\n";
  ptr +=".button-off {background-color: #1abc9c;}\n";
  ptr +=".button-off:active {background-color: #1abc9c;}\n";
  ptr +="p {font-size: 14px;color: #888;margin-bottom: 10px;}\n";
  ptr +="</style>\n";
  ptr +="</head>\n";
  ptr +="<body>\n";
  ptr +="<h1>ESP8266 Web Server for controlling external led</h1>\n";
  
  
   if(ledstat)
  {ptr +="<p>LED1 Status: ON</p><a class=\"button button-off\" href=\"/ledoff\">OFF</a>\n";}
  else
  {ptr +="<p>LED1 Status: OFF</p><a class=\"button button-on\" href=\"/ledon\">ON</a>\n";}

  

  ptr +="</body>\n";
  ptr +="</html>\n";
  return ptr;
}
